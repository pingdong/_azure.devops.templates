parameters:
- name: projectName
  type: string
- name: buildConfiguration
  type: string
- name: continueOnError
  type: boolean
  default: false
- name: artifact
  type: string
  default: 'drop'

steps:
- task: gittools.gitversion.gitversion-task.GitVersion@5
  displayName: Update Assembly version
  continueOnError: ${{ parameters.continueOnError }}
  inputs:
    updateAssemblyInfo: true

- script: echo "##vso[build.updatebuildnumber]$(GitVersion.SemVer)"
  displayName: Update Build Number $(GitVersion.SemVer)
  continueOnError: ${{ parameters.continueOnError }}

- task: DotNetCoreCLI@2
  displayName: Restoring dependencies
  continueOnError: ${{ parameters.continueOnError }}
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Building with Configuration: ${{ parameters.buildConfiguration }}'
  continueOnError: ${{ parameters.continueOnError }}
  condition: succeeded()
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/${{ parameters.projectName }}.csproj'
    versioningScheme: byEnvVar
    versionEnvVar: 'GitVersion.SemVer'
    arguments: '--no-restore --configuration ${{ parameters.buildConfiguration }} --output $(Build.ArtifactStagingDirectory)'

# TODO: Create Repo Version Tag







# - job: BuildDBMigrationScript
#   displayName: Building Database Migration Script
#   pool:
#     vmImage: $(build#pool)
#   workspace:
#     clean: all 
#   variables:
#   - group: Build
#   steps:
#   - task: pekspro.pekspro-efcore-migration-script-generator.efcore-migration-script-generator.efcore-migration-script-generator-task@0
#     displayName: 'Generate Migration Scripts'
#     inputs:
#       projectpath: src/infrastructure/Places.Infrastructure.csproj
#       databasecontexts: DefaultDbContext
#       targetfolder: '$(Build.ArtifactStagingDirectory)'
#     condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
#     env:
#       ConnectionStrings__Default: $(Place-Db-ConnectionString)

- publish: $(Build.ArtifactStagingDirectory)
  displayName: Publishing Artifact
  continueOnError: ${{ parameters.continueOnError }}
  artifact: ${{ parameters.artifact }}

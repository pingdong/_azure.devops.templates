parameters:
- name: projectName
  type: string
- name: buildConfiguration
  type: string
- name: continueOnError
  type: boolean
  default: false
- name: artifact
  type: string
  default: 'drop'
- name: forRelease
  type: boolean
  default: false
- name: publishWebProjects
  type: boolean
  default: false

steps:
- ${{ if eq(parameters['forRelease'], true) }}:
  - task: gittools.gitversion.gitversion-task.GitVersion@5
    displayName: Update Assembly version
    continueOnError: ${{ parameters.continueOnError }}
    inputs:
      updateAssemblyInfo: true

- task: DotNetCoreCLI@2
  displayName: Restoring dependencies
  continueOnError: ${{ parameters.continueOnError }}
  inputs:
    command: restore
    projects: '**/*.csproj'

- ${{ if eq(parameters['forRelease'], false) }}:
  - task: DotNetCoreCLI@2
    displayName: 'Building with Configuration: ${{ parameters.buildConfiguration }}'
    continueOnError: ${{ parameters.continueOnError }}
    condition: succeeded()
    inputs:
      command: publish
      publishWebProjects: ${{ parameters.publishWebProjects }}
      projects: '**/${{ parameters.projectName }}.csproj'
      arguments: '--no-restore --configuration ${{ parameters.buildConfiguration }} --output $(Build.ArtifactStagingDirectory)'

- ${{ if eq(parameters['forRelease'], true) }}:
  - task: DotNetCoreCLI@2
    displayName: 'Building with Configuration: ${{ parameters.buildConfiguration }}'
    continueOnError: ${{ parameters.continueOnError }}
    condition: succeeded()
    inputs:
      command: publish
      publishWebProjects: ${{ parameters.publishWebProjects }}
      projects: '**/${{ parameters.projectName }}.csproj'
      versioningScheme: byEnvVar
      versionEnvVar: 'GitVersion.SemVer'
      arguments: '--no-restore --configuration ${{ parameters.buildConfiguration }} --output $(Build.ArtifactStagingDirectory)'
  
  - task: mspremier.BuildQualityChecks.QualityChecks-task.BuildQualityChecks@7
    displayName: Check Build Quality
    continueOnError: ${{ parameters.continueOnError }}
    inputs:
      checkCoverage: false

- publish: $(Build.ArtifactStagingDirectory)
  displayName: Publishing Artifact
  continueOnError: ${{ parameters.continueOnError }}
  artifact: ${{ parameters.artifact }}

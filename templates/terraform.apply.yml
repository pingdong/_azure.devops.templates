parameters:
- name: environment
  type: string
- name: poolImage
  type: string
- name: workingDirectory
  type: string
- name: azureSubscription
  type: string
- name: terraformVersion
  type: string
- name: stateResourceGroup
  type: string
- name: stateStorageAccount
  type: string
- name: stateStorageAccountContainer
  type: string
- name: stateStorageAccountKey
  type: string

jobs:
- job: Planning
  displayName: Planning
  environment: ${{ parameters["environment"] }}
  pool:
    poolImage: ${{ parameters["poolImage"] }}
  workspace:
    clean: all
  steps:
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    displayName: 'Terraform: Install ${{ parameters["terraformVersion"] }}'
    inputs:
      terraformVersion: ${{ parameters["terraformVersion"] }}

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
    displayName: 'Terraform: init'
    inputs:
      command: init
      workingDirectory: ${{ parameters["workingDirectory"] }}
      backendServiceArm: ${{ parameters["azureSubscription"] }}
      backendAzureRmResourceGroupName: ${{ parameters["stateResourceGroup }}
      backendAzureRmStorageAccountName: ${{ parameters["stateStorageAccount }}
      backendAzureRmContainerName: ${{ parameters["stateStorageAccountContainer"] }}
      backendAzureRmKey: ${{ parameters["stateStorageAccountKey"] }}

    displayName: 'Terraform: '
    inputs:
      command: apply
      workingDirectory: ${{ parameters["workingDirectory"] }}
      environmentServiceNameAzureRM: ${{ parameters["azureSubscription"] }}

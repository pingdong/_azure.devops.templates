parameters:
- name: azureSubscription
  type: string
- name: funcName
  type: string
# Slot
- name: enableSlot
  type: boolean
  default: false
- name: resourceGroupName
  type: string
  default: ''
- name: slotName
  type: string
  default: ''
# Build
- name: continueOnError
  type: boolean
  default: false
- name: artifact
  default: 'drop'

steps:
- download: current
  displayName: Getting Artifact
  continueOnError: ${{ parameters.continueOnError }}
  artifact: ${{ parameters.artifact }}

- ${{ if eq(parameters['enableSlot'], false) }}:
  - task: AzureWebApp@1
    displayName: Deploying
    continueOnError: ${{ parameters.continueOnError }}
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      appType: functionApp
      appName: ${{ parameters.funcName }}
      package: '$(Pipeline.Workspace)/${{ parameters.artifact }}/*.zip'

- ${{ if eq(parameters['enableSlot'], true) }}:
  - task: AzureWebApp@1
    displayName: Deploying to Slot ${{ parameters.slotName }}
    continueOnError: ${{ parameters.continueOnError }}
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      appType: functionApp
      appName: ${{ parameters.funcName }}
      package: '$(Pipeline.Workspace)/drop/*.zip'
      deployToSlotOrASE: true
      resourceGroupName: ${{ parameters.resourcegroupName }}
      slotName: ${{ parameters.slotName }}

  - task: AzureAppServiceManage@0
    displayName: Swapping Slot ${{ parameters.slotName }} with Production
    continueOnError: ${{ parameters.continueOnError }}
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      action: 'Swap Slots'
      WebAppName: ${{ parameters.funcName }}
      ResourceGroupName: ${{ parameters.resourcegroupName }}
      SourceSlot: ${{ parameters.slotName }}
      SwapWithProduction: true
